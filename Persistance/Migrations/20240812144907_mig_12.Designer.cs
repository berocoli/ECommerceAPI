// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persistance.Contexts;

#nullable disable

namespace Persistance.Migrations
{
    [DbContext(typeof(ECommerceAPIDbContext))]
    [Migration("20240812144907_mig_12")]
    partial class mig_12
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("46856dc4-5e85-49e2-bf63-8cfdbc9a3b05"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 6, 988, DateTimeKind.Utc).AddTicks(7170),
                            Email = "example1@mail.com",
                            Name = "Berke Öztürk",
                            Password = "RwHHjQ7j3KaP//GwdFfm8Q==.p+V+gRcadMH9TdpARysSdbp7sUm796sdyYG7C0d0LwI=",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 6, 988, DateTimeKind.Utc).AddTicks(7170)
                        },
                        new
                        {
                            Id = new Guid("69a14f72-f9fb-49b7-9d9f-2b3f774deb64"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 6, 995, DateTimeKind.Utc).AddTicks(3460),
                            Email = "example2@mail.com",
                            Name = "Doğa Su Türkileri",
                            Password = "Di3dOa7GxFomcIcVJkxTIw==.VtmlCixGZV1tFCx+vE3CsnBEz7eGXdcaVUODSxM6V1c=",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 6, 995, DateTimeKind.Utc).AddTicks(3460)
                        },
                        new
                        {
                            Id = new Guid("9f5ed5e9-886e-48bb-b26a-f6b80e0ec7e2"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 1, DateTimeKind.Utc).AddTicks(9640),
                            Email = "example3@mail.com",
                            Name = "Ervin Parlak",
                            Password = "JNCoo6EGgksjt055q903mA==.mgwlP6fRgUjf9STn6H/hqE59PUS2YPgNLT3X0ttZDRA=",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 1, DateTimeKind.Utc).AddTicks(9640)
                        },
                        new
                        {
                            Id = new Guid("3a5b71dc-d1d2-4009-bf32-1b19a3d2d0c0"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 8, DateTimeKind.Utc).AddTicks(5670),
                            Email = "example4@mail.com",
                            Name = "Gamze Naz Yıldırım",
                            Password = "EccMEWO4rcVJbKzsw1wwuQ==.hZxr5cpms+FDSn6ad7KMPQnbxrWl/SRaQ9F6m4yjFkg=",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 8, DateTimeKind.Utc).AddTicks(5670)
                        },
                        new
                        {
                            Id = new Guid("fa6ecf53-00c2-44ce-a967-8e20952ac1a6"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 16, DateTimeKind.Utc).AddTicks(8130),
                            Email = "example5@mail.com",
                            Name = "Atakan Yıldırım",
                            Password = "5nizkC5y+315T/vLrU/SVw==.ql1vP1qARzybUfBGVN6GravUQLG5Kj1i7CBoo0np46o=",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 16, DateTimeKind.Utc).AddTicks(8130)
                        },
                        new
                        {
                            Id = new Guid("298f0f0f-2a46-40f4-8237-aa674dca05f6"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 23, DateTimeKind.Utc).AddTicks(4000),
                            Email = "example6@mail.com",
                            Name = "Ahmet Mümtaz Taylan",
                            Password = "qoyd5KDgEIgyQXLmfynRew==.aNg0/JQlgGuS8ae6Dl+f3HVP/Map9M4qsHzJtuKcCes=",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 23, DateTimeKind.Utc).AddTicks(4000)
                        },
                        new
                        {
                            Id = new Guid("f341dfea-2d4f-41aa-aefb-ca3e12110f81"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 29, DateTimeKind.Utc).AddTicks(9760),
                            Email = "example7@mail.com",
                            Name = "Cem Yılmaz",
                            Password = "pi+upkWhmLTtVUu5nVXexg==.2ncD5TiM99gAb2qrIasGwZ7eGdxmjXFKARgX24DaBQY=",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 29, DateTimeKind.Utc).AddTicks(9760)
                        },
                        new
                        {
                            Id = new Guid("e217b370-03e0-4d4a-b4d2-4f01847a2f2b"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 36, DateTimeKind.Utc).AddTicks(5600),
                            Email = "example8@mail.com",
                            Name = "Şahan Gökbakar",
                            Password = "kSZ0TGsSFqN67BgcZpO/NQ==.4dj1IsjU5OEQ4iTKJom42uUkkscRX9KOZ4TA8tah3VA=",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 36, DateTimeKind.Utc).AddTicks(5600)
                        },
                        new
                        {
                            Id = new Guid("934da2eb-501b-4014-8ffc-66a2789975c9"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 43, DateTimeKind.Utc).AddTicks(1410),
                            Email = "example9@mail.com",
                            Name = "Mahsun Kırmızıgül",
                            Password = "6cHjoTop9yVRndChqM2oPA==.SugstybweOdAK6rR97PTkC+9Rv7VBfdCFaZGdoObBhQ=",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 43, DateTimeKind.Utc).AddTicks(1410)
                        },
                        new
                        {
                            Id = new Guid("9da9d768-a430-42c4-9e8d-8dec26a32110"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 49, DateTimeKind.Utc).AddTicks(7320),
                            Email = "example10@mail.com",
                            Name = "Erkin Karaçay",
                            Password = "oHR7nMSdQuBcz3Jxm4WUDg==.tLMgx2UCs2UKUDch2Kb5rFBSmO2DLbjsXlmw1cAwU8g=",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 49, DateTimeKind.Utc).AddTicks(7320)
                        },
                        new
                        {
                            Id = new Guid("1196bdca-692d-4f4b-bfa9-672d10586bc2"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 56, DateTimeKind.Utc).AddTicks(3180),
                            Email = "example11@mail.com",
                            Name = "Ozan İmamhatipoğlu",
                            Password = "0L4+W9HIrA+Azn/ibW6+FA==.I/APi7pWdRtPZK3+GPjeZL+a85cfSH7AmOVzx2idUDA=",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 56, DateTimeKind.Utc).AddTicks(3180)
                        },
                        new
                        {
                            Id = new Guid("2076d73b-cbc8-4d67-a3a3-89965302e958"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 63, DateTimeKind.Utc).AddTicks(4750),
                            Email = "example12@mail.com",
                            Name = "Barkın Özkaplan",
                            Password = "rZkT7S3d+Rz2fXEhQ61uiw==.cUEc4aTKU2KjsaVIMZJT8F/Y2MNLOooEnkWQQYZZL8Y=",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 63, DateTimeKind.Utc).AddTicks(4750)
                        },
                        new
                        {
                            Id = new Guid("71facde0-d11c-457d-9ff8-730159a88341"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 70, DateTimeKind.Utc).AddTicks(690),
                            Email = "example13@mail.com",
                            Name = "Barış Onur Aydın",
                            Password = "dqRVk5UORDtMrV+xQveygQ==.VC+29lQrJ3C304TlWMWkszGw+Vu6jQmCiPcsXFcFI7E=",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 70, DateTimeKind.Utc).AddTicks(690)
                        },
                        new
                        {
                            Id = new Guid("c400303e-5a12-49bb-9678-95ec0bde7f94"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6500),
                            Email = "example14@mail.com",
                            Name = "Deniz Zarshat",
                            Password = "Tqdjdo7DhBEakOQ/IdQi7w==.Uzb+TcLB5gg4/KxAxMFElvGbWGcSfSILzffNSKBWpR4=",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6500)
                        });
                });

            modelBuilder.Entity("Domain.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cf1834cb-76bc-464c-b881-a5379c218e03"),
                            Address = "2222 Oak Drive, Hillcrest, NY 10001",
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6750),
                            CustomerId = new Guid("4fb44a49-cfcd-440f-91f0-ad17d09d9c5b"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6750)
                        },
                        new
                        {
                            Id = new Guid("ce2532db-6973-4561-8584-86398c6b2be9"),
                            Address = "456 Elm Avenue, Oakville, CA 94022",
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6760),
                            CustomerId = new Guid("82b1e376-c3dd-4d2c-ab82-6f6e08d60839"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6760)
                        },
                        new
                        {
                            Id = new Guid("6bbbcbcf-b07a-4ff2-a1a8-eebceef132a9"),
                            Address = "10101 Juniper Avenue, Blue Ridge, NC 27501",
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6760),
                            CustomerId = new Guid("ce2f0b86-17f4-463e-9fc6-b6ba178da4de"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6770)
                        },
                        new
                        {
                            Id = new Guid("9ddaa299-ca19-407b-b61c-c6a6880ccc0f"),
                            Address = "9999 Spruce Place, Highland, UT 84003",
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6770),
                            CustomerId = new Guid("efc859b7-bff5-418c-881a-2dc224ec00cd"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6770)
                        },
                        new
                        {
                            Id = new Guid("1167cb57-3733-4617-91ba-f4fbf4b7f4ff"),
                            Address = "4444 Aspen Court, Meadowbrook, OR 97001",
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6780),
                            CustomerId = new Guid("4efa7be4-ae10-41fc-8f36-2c233ba2e4f0"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6780)
                        },
                        new
                        {
                            Id = new Guid("5cce196d-483e-482d-a0af-6fc77414f2b7"),
                            Address = "789 Pine Lane, Rivertown, TX 75001",
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6780),
                            CustomerId = new Guid("dbf02731-121f-4205-a8d8-c8f020ca2ba6"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6780)
                        },
                        new
                        {
                            Id = new Guid("72603581-ce02-47cd-b49d-cf880999e49f"),
                            Address = "5555 Redwood Street, Greenfield, AZ 85001",
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6790),
                            CustomerId = new Guid("dd660ee3-9076-44f9-a8bd-753557b6e4e2"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6790)
                        },
                        new
                        {
                            Id = new Guid("65388f87-6da2-4e87-b051-27c79eef6952"),
                            Address = "7777 Poplar Path, Brookhaven, GA 30301",
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6800),
                            CustomerId = new Guid("d498693f-b52f-4d62-8d5a-299011fc6219"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6800)
                        },
                        new
                        {
                            Id = new Guid("7ef1842d-c735-4de7-a917-decd0d3cf90f"),
                            Address = "1010 Birch Road, Forestville, WA 98001",
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6800),
                            CustomerId = new Guid("b8e4eb7f-d312-45ff-a5e7-43a6746b92bf"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6800)
                        },
                        new
                        {
                            Id = new Guid("c8b16188-583d-471f-b8ed-7976fab8f70d"),
                            Address = "8888 Cypress Circle, Riverview, MI 48201",
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6810),
                            CustomerId = new Guid("14badc68-83f7-4964-bf64-4348a68e2808"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6810)
                        });
                });

            modelBuilder.Entity("Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<double>("Stock")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d280b94d-ec89-43c9-a553-fea33dd69285"),
                            CategoryId = new Guid("c57a99ee-e5c6-4705-9ea0-fdcb68d8078c"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6840),
                            Description = "An ergonomic office chair with adjustable height and lumbar support. Ideal for long hours of work.",
                            ImageUrl = " ",
                            Name = "BirchCraft Office Chair",
                            Price = 149.99000000000001,
                            Stock = 150.0,
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6840)
                        },
                        new
                        {
                            Id = new Guid("823c6a14-1e90-479a-9eef-e351307a606d"),
                            CategoryId = new Guid("fcbd5e16-0309-4872-902a-8dfad346f799"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6850),
                            Description = "Lightweight and comfortable running shoes with breathable mesh and cushioned sole.",
                            ImageUrl = " ",
                            Name = "OakHill Running Shoes",
                            Price = 89.989999999999995,
                            Stock = 300.0,
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6850)
                        },
                        new
                        {
                            Id = new Guid("6b99a619-e692-4b77-91c6-dc9aa69389e6"),
                            CategoryId = new Guid("f51eefa3-3871-48cd-b442-39819c078705"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6850),
                            Description = "A portable Bluetooth speaker with high-quality sound and long battery life. Perfectforoutdooractivities.",
                            ImageUrl = " ",
                            Name = "WillowWave Bluetooth Speaker",
                            Price = 59.990000000000002,
                            Stock = 250.0,
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6850)
                        },
                        new
                        {
                            Id = new Guid("7af4b8d3-9c92-4077-acaf-6135b2183203"),
                            CategoryId = new Guid("a3d611e6-2c8a-4190-9381-e4af896ee08b"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6860),
                            Description = "A stylish LED lamp with adjustable brightness and color temperature. Ideal for reading and working.",
                            ImageUrl = " ",
                            Name = "AspenGlow LED Lamp",
                            Price = 39.990000000000002,
                            Stock = 180.0,
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6860)
                        },
                        new
                        {
                            Id = new Guid("4408d508-a7ed-4545-99f2-648f31a94b15"),
                            CategoryId = new Guid("eb0cc970-cccf-4ab3-a041-21e0a9b68430"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6870),
                            Description = "A powerful gaming laptop with high-end graphics and fast processing speed. Ideal for gamers.",
                            ImageUrl = " ",
                            Name = "RedwoodX Gaming Laptop",
                            Price = 1299.99,
                            Stock = 30.0,
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6870)
                        },
                        new
                        {
                            Id = new Guid("1a01a99a-b6dc-4ad7-9f11-61d6d12a7909"),
                            CategoryId = new Guid("d27d9bdd-890e-4501-bc57-d28958007ef2"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6870),
                            Description = "A smart home security camera with night vision and motion detection. Connects to your smartphone.",
                            ImageUrl = " ",
                            Name = "FirNest Home Security Camera",
                            Price = 99.989999999999995,
                            Stock = 100.0,
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6870)
                        },
                        new
                        {
                            Id = new Guid("b44d2758-a173-4bc0-8a68-3ac0053d72ad"),
                            CategoryId = new Guid("ecd68670-6401-4c42-9026-d3a89b703b8b"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6880),
                            Description = "A fitness tracker with heart rate monitoring, step counting, and sleep tracking. Waterproof design.",
                            ImageUrl = " ",
                            Name = "PoplarPulse Fitness Tracker",
                            Price = 49.990000000000002,
                            Stock = 220.0,
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6880)
                        },
                        new
                        {
                            Id = new Guid("de84e562-7e86-4ee4-8cf0-5933d1aed2aa"),
                            CategoryId = new Guid("37019549-da5f-43ba-9c2e-ecadc5f50851"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6890),
                            Description = "A non-slip yoga mat with extra cushioning for comfort. Perfect for yoga and pilates.",
                            ImageUrl = " ",
                            Name = "CypressFlow Yoga Mat",
                            Price = 29.989999999999998,
                            Stock = 500.0,
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6890)
                        },
                        new
                        {
                            Id = new Guid("e3dd8313-e6b5-4bbc-87d1-cbe35a719e70"),
                            CategoryId = new Guid("e9654245-9daf-4191-be37-f3dd49a76bbe"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6890),
                            Description = "A high-performance drone with HD camera and long battery life. Ideal for aerial photography.",
                            ImageUrl = " ",
                            Name = "SpruceSky Drone",
                            Price = 349.99000000000001,
                            Stock = 60.0,
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6890)
                        },
                        new
                        {
                            Id = new Guid("39048274-1b85-40c8-88c8-61267ef244ae"),
                            CategoryId = new Guid("77860c4e-e20e-47d7-a447-cbc04eda6aca"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6900),
                            Description = "An insulated water bottle that keeps drinks hot or cold for hours. Made from stainless steel.",
                            ImageUrl = " ",
                            Name = "JuniperPure Water Bottle",
                            Price = 24.989999999999998,
                            Stock = 400.0,
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6900)
                        },
                        new
                        {
                            Id = new Guid("c6636e32-ee1b-4326-81b9-5d6e2ca65ee3"),
                            CategoryId = new Guid("c62c50c2-371e-4e3a-aa47-bd7a60d6d755"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6910),
                            Description = "A durable and flexible smartphone case that provides excellent protection. Compatible with most models.",
                            ImageUrl = " ",
                            Name = "MapleFlex Smartphone Case",
                            Price = 19.989999999999998,
                            Stock = 350.0,
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6910)
                        },
                        new
                        {
                            Id = new Guid("4956083a-28c9-454e-a95c-c38eb4d3ad33"),
                            CategoryId = new Guid("ed7f3461-1544-4a04-8477-771834a35740"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6910),
                            Description = "A contemporary table lamp with touch control and adjustable brightness. Perfect for any room.",
                            ImageUrl = " ",
                            Name = "ElmGlow Table Lamp",
                            Price = 34.990000000000002,
                            Stock = 140.0,
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6910)
                        },
                        new
                        {
                            Id = new Guid("a7aa39fa-cfc6-4f71-be18-7d400d977d39"),
                            CategoryId = new Guid("418ce8cc-5e10-469b-87f3-2162b6ebce90"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6920),
                            Description = "A professional kitchen knife set with high-carbon stainless steel blades. Includes 6 knives and ablock.",
                            ImageUrl = " ",
                            Name = "PineEdge Kitchen Knife Set",
                            Price = 89.989999999999995,
                            Stock = 85.0,
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6920)
                        },
                        new
                        {
                            Id = new Guid("58011a47-b8a6-47cd-abb0-014755326b2e"),
                            CategoryId = new Guid("e68801c3-3229-4f8b-b76d-53cfe229f0cd"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6930),
                            Description = "High-quality wireless earbuds with noise cancellation and long battery life. Comes with a chargingcase.",
                            ImageUrl = " ",
                            Name = "BirchSound Wireless Earbuds",
                            Price = 79.989999999999995,
                            Stock = 300.0,
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6930)
                        },
                        new
                        {
                            Id = new Guid("98e9eafa-7d7d-4795-9318-8047aa68f4cc"),
                            CategoryId = new Guid("29bbaa2a-0e6a-434a-8872-d6ebd37b4cf7"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6930),
                            Description = "A programmable coffee maker with a built-in grinder and timer. Makes up to 12 cups of coffee.",
                            ImageUrl = " ",
                            Name = "OakPure Coffee Maker",
                            Price = 129.99000000000001,
                            Stock = 90.0,
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6930)
                        },
                        new
                        {
                            Id = new Guid("9cbb9f00-ab13-4c56-94a5-96057560172f"),
                            CategoryId = new Guid("d71bd56b-705c-4da6-8b6e-21c812d3b085"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6940),
                            Description = "A lightweight and durable camping tent that accommodates up to 4 people. Easy to set up.",
                            ImageUrl = " ",
                            Name = "WillowLite Camping Tent",
                            Price = 199.99000000000001,
                            Stock = 70.0,
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6940)
                        },
                        new
                        {
                            Id = new Guid("f72946a5-52aa-4424-8dbe-9d3aa3e5ad81"),
                            CategoryId = new Guid("4a77e62a-59e5-4a8a-832b-557f9f17c89f"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6940),
                            Description = "A compact mini fridge with adjustable temperature settings. Perfect for dorm rooms and offices.",
                            ImageUrl = " ",
                            Name = "AspenCool Mini Fridge",
                            Price = 149.99000000000001,
                            Stock = 120.0,
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6940)
                        },
                        new
                        {
                            Id = new Guid("f1e75dd1-0eec-4633-a0ee-4f28f39cc476"),
                            CategoryId = new Guid("2b79a453-28d1-4132-897e-d61a55537159"),
                            CreatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6950),
                            Description = "A high-capacity power bank with fast charging technology. Compatible with all USB devices.",
                            ImageUrl = " ",
                            Name = "RedwoodMax Power Bank",
                            Price = 39.990000000000002,
                            Stock = 250.0,
                            UpdatedDate = new DateTime(2024, 8, 12, 14, 49, 7, 76, DateTimeKind.Utc).AddTicks(6950)
                        });
                });

            modelBuilder.Entity("Domain.ProductsCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
