// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persistence.Contexts;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(ECommerceAPIDbContext))]
    [Migration("20240828123331_mig_15")]
    partial class mig_15
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fa12f9a1-bc64-482b-b8b9-13dc6eaa5399"),
                            Address = "2222 Oak Drive, Hillcrest, NY 10001",
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3460),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3460),
                            UserId = new Guid("b4058b15-7ccc-4b8e-80ae-4157eedd42b0")
                        },
                        new
                        {
                            Id = new Guid("3e037c33-0ba0-447f-80f3-bed894699f27"),
                            Address = "456 Elm Avenue, Oakville, CA 94022",
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3470),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3470),
                            UserId = new Guid("fef8af3d-ba8f-4233-bb5c-8eddfe08ecbe")
                        },
                        new
                        {
                            Id = new Guid("26f89e1e-4c0f-4ba5-a695-1829fe27620f"),
                            Address = "10101 Juniper Avenue, Blue Ridge, NC 27501",
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3470),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3470),
                            UserId = new Guid("e1de6c9f-2eac-4ccc-b601-aae0722f85cb")
                        },
                        new
                        {
                            Id = new Guid("9ee854c6-05f6-443a-add0-c5b8c61092c1"),
                            Address = "9999 Spruce Place, Highland, UT 84003",
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3480),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3480),
                            UserId = new Guid("058a981b-1b7c-407e-b2f9-ef23926c94b8")
                        },
                        new
                        {
                            Id = new Guid("0becf285-0496-4a96-a173-d97b73957213"),
                            Address = "4444 Aspen Court, Meadowbrook, OR 97001",
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3490),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3490),
                            UserId = new Guid("b985d043-5d61-485f-8763-ecd30713d002")
                        },
                        new
                        {
                            Id = new Guid("88e2a969-56e1-4211-a4aa-9aab01a9ff4c"),
                            Address = "789 Pine Lane, Rivertown, TX 75001",
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3490),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3490),
                            UserId = new Guid("a018b41f-8d52-4418-8cc5-73e15ef60924")
                        },
                        new
                        {
                            Id = new Guid("ae754905-958e-47c5-b8d4-e23b0c59d96f"),
                            Address = "5555 Redwood Street, Greenfield, AZ 85001",
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3500),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3500),
                            UserId = new Guid("f836461b-9e6d-4541-b020-2070115a60e5")
                        },
                        new
                        {
                            Id = new Guid("b8d965dd-681f-4424-82ea-e5da389ed7ae"),
                            Address = "7777 Poplar Path, Brookhaven, GA 30301",
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3510),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3510),
                            UserId = new Guid("1427dd02-068c-4deb-97d3-dbfd2c6a4205")
                        },
                        new
                        {
                            Id = new Guid("d67081c1-c39f-4465-85b1-219aebb2a8ae"),
                            Address = "1010 Birch Road, Forestville, WA 98001",
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3510),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3510),
                            UserId = new Guid("1e6a2ee0-1ded-4e33-893f-3c6077a1c24a")
                        },
                        new
                        {
                            Id = new Guid("817d7e18-39ab-476f-a2c9-f7638542c80a"),
                            Address = "8888 Cypress Circle, Riverview, MI 48201",
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3520),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3520),
                            UserId = new Guid("06eeb5a6-bac3-4313-b4fe-d3c628d4737d")
                        });
                });

            modelBuilder.Entity("Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<double>("Stock")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("76b92cd9-a59f-413e-8247-e1bc74016a28"),
                            CategoryId = new Guid("9ef788ca-6934-43c6-b29f-43b90c52b45c"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3550),
                            Description = "An ergonomic office chair with adjustable height and lumbar support. Ideal for long hours of work.",
                            ImageUrl = " ",
                            Name = "BirchCraft Office Chair",
                            Price = 149.99000000000001,
                            Stock = 150.0,
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3550)
                        },
                        new
                        {
                            Id = new Guid("123f32e7-1546-406e-88cd-bdff6a1e4440"),
                            CategoryId = new Guid("94175c28-676e-46cc-87d1-db6641f7985b"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3560),
                            Description = "Lightweight and comfortable running shoes with breathable mesh and cushioned sole.",
                            ImageUrl = " ",
                            Name = "OakHill Running Shoes",
                            Price = 89.989999999999995,
                            Stock = 300.0,
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3560)
                        },
                        new
                        {
                            Id = new Guid("8e5bfaf6-1867-4b6f-b2a3-03a2c199efda"),
                            CategoryId = new Guid("0687ca11-a914-458c-bfa6-992622f73e31"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3560),
                            Description = "A portable Bluetooth speaker with high-quality sound and long battery life. Perfectforoutdooractivities.",
                            ImageUrl = " ",
                            Name = "WillowWave Bluetooth Speaker",
                            Price = 59.990000000000002,
                            Stock = 250.0,
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3560)
                        },
                        new
                        {
                            Id = new Guid("6a93e5e5-ce27-41b5-9afe-fa3312ca7c74"),
                            CategoryId = new Guid("95073484-fba3-43d8-8231-c428a47aef53"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3570),
                            Description = "A stylish LED lamp with adjustable brightness and color temperature. Ideal for reading and working.",
                            ImageUrl = " ",
                            Name = "AspenGlow LED Lamp",
                            Price = 39.990000000000002,
                            Stock = 180.0,
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3570)
                        },
                        new
                        {
                            Id = new Guid("64698262-0473-4a84-9544-d95e5f000b4c"),
                            CategoryId = new Guid("e5c01897-3156-48a4-8738-52886f754f6a"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3580),
                            Description = "A powerful gaming laptop with high-end graphics and fast processing speed. Ideal for gamers.",
                            ImageUrl = " ",
                            Name = "RedwoodX Gaming Laptop",
                            Price = 1299.99,
                            Stock = 30.0,
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3580)
                        },
                        new
                        {
                            Id = new Guid("861144da-e256-4ca6-8f17-b5c572beb938"),
                            CategoryId = new Guid("805cb91a-d76e-4cb0-9f4d-4ac23901ac5b"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3580),
                            Description = "A smart home security camera with night vision and motion detection. Connects to your smartphone.",
                            ImageUrl = " ",
                            Name = "FirNest Home Security Camera",
                            Price = 99.989999999999995,
                            Stock = 100.0,
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3580)
                        },
                        new
                        {
                            Id = new Guid("99561756-e4e0-4d90-bb7f-2ebbf05b70b2"),
                            CategoryId = new Guid("8800eb37-0422-4731-9c79-86d425d15dc4"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3590),
                            Description = "A fitness tracker with heart rate monitoring, step counting, and sleep tracking. Waterproof design.",
                            ImageUrl = " ",
                            Name = "PoplarPulse Fitness Tracker",
                            Price = 49.990000000000002,
                            Stock = 220.0,
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3590)
                        },
                        new
                        {
                            Id = new Guid("a15821de-5a1d-42ee-9bf6-2736ebd5b07e"),
                            CategoryId = new Guid("6875434d-f6ff-460f-a96a-0cfd2946d55e"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3600),
                            Description = "A non-slip yoga mat with extra cushioning for comfort. Perfect for yoga and pilates.",
                            ImageUrl = " ",
                            Name = "CypressFlow Yoga Mat",
                            Price = 29.989999999999998,
                            Stock = 500.0,
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3600)
                        },
                        new
                        {
                            Id = new Guid("9e0bc21f-e81e-4540-b940-164deecb7521"),
                            CategoryId = new Guid("2a074377-54c9-48ab-a1fc-4b722cec3f8d"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3600),
                            Description = "A high-performance drone with HD camera and long battery life. Ideal for aerial photography.",
                            ImageUrl = " ",
                            Name = "SpruceSky Drone",
                            Price = 349.99000000000001,
                            Stock = 60.0,
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3600)
                        },
                        new
                        {
                            Id = new Guid("aaf70b7d-43e4-4c44-b3a5-d8062d8d1ca0"),
                            CategoryId = new Guid("522bbdf7-8fac-402b-945f-b6e6bc85519d"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3610),
                            Description = "An insulated water bottle that keeps drinks hot or cold for hours. Made from stainless steel.",
                            ImageUrl = " ",
                            Name = "JuniperPure Water Bottle",
                            Price = 24.989999999999998,
                            Stock = 400.0,
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3610)
                        },
                        new
                        {
                            Id = new Guid("34500b8a-5f3b-4840-8410-92b389ed3d9b"),
                            CategoryId = new Guid("09afce93-ca6a-4ce6-bf4b-3136053ee675"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3620),
                            Description = "A durable and flexible smartphone case that provides excellent protection. Compatible with most models.",
                            ImageUrl = " ",
                            Name = "MapleFlex Smartphone Case",
                            Price = 19.989999999999998,
                            Stock = 350.0,
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3620)
                        },
                        new
                        {
                            Id = new Guid("38db490a-a62d-4891-82e7-42838b0eece5"),
                            CategoryId = new Guid("99eef1fb-8c11-45cc-9035-502fc184c2a7"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3630),
                            Description = "A contemporary table lamp with touch control and adjustable brightness. Perfect for any room.",
                            ImageUrl = " ",
                            Name = "ElmGlow Table Lamp",
                            Price = 34.990000000000002,
                            Stock = 140.0,
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3630)
                        },
                        new
                        {
                            Id = new Guid("57d0898c-51d9-42cc-a951-89391a0b547b"),
                            CategoryId = new Guid("bc291680-61cb-4986-8942-c7b7be73f2f0"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3630),
                            Description = "A professional kitchen knife set with high-carbon stainless steel blades. Includes 6 knives and ablock.",
                            ImageUrl = " ",
                            Name = "PineEdge Kitchen Knife Set",
                            Price = 89.989999999999995,
                            Stock = 85.0,
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3630)
                        },
                        new
                        {
                            Id = new Guid("f9028139-2025-4206-8761-092e4bcfe568"),
                            CategoryId = new Guid("41f42a51-edce-4fa9-ad5d-f5d93a070977"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3640),
                            Description = "High-quality wireless earbuds with noise cancellation and long battery life. Comes with a chargingcase.",
                            ImageUrl = " ",
                            Name = "BirchSound Wireless Earbuds",
                            Price = 79.989999999999995,
                            Stock = 300.0,
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3640)
                        },
                        new
                        {
                            Id = new Guid("3f8e199e-0baa-4fde-b319-4a06dc816bfe"),
                            CategoryId = new Guid("50b208f3-f3f9-46dc-bc5f-369ee6a11cab"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3640),
                            Description = "A programmable coffee maker with a built-in grinder and timer. Makes up to 12 cups of coffee.",
                            ImageUrl = " ",
                            Name = "OakPure Coffee Maker",
                            Price = 129.99000000000001,
                            Stock = 90.0,
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3640)
                        },
                        new
                        {
                            Id = new Guid("03d0acd7-2933-4f4b-be82-b1997ada2d50"),
                            CategoryId = new Guid("2f6657f9-61e8-4088-8da7-c3f8fa33b4d1"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3650),
                            Description = "A lightweight and durable camping tent that accommodates up to 4 people. Easy to set up.",
                            ImageUrl = " ",
                            Name = "WillowLite Camping Tent",
                            Price = 199.99000000000001,
                            Stock = 70.0,
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3650)
                        },
                        new
                        {
                            Id = new Guid("08a2c45c-fd03-43b1-ac59-f708717b50d3"),
                            CategoryId = new Guid("6a6ad2ea-589b-445c-afc9-8949433b3944"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3660),
                            Description = "A compact mini fridge with adjustable temperature settings. Perfect for dorm rooms and offices.",
                            ImageUrl = " ",
                            Name = "AspenCool Mini Fridge",
                            Price = 149.99000000000001,
                            Stock = 120.0,
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3660)
                        },
                        new
                        {
                            Id = new Guid("d9f9bcb1-eea4-4897-92e9-9627cde5a6d0"),
                            CategoryId = new Guid("3a1d31ed-57e9-45df-aefe-0d124a5820b5"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3660),
                            Description = "A high-capacity power bank with fast charging technology. Compatible with all USB devices.",
                            ImageUrl = " ",
                            Name = "RedwoodMax Power Bank",
                            Price = 39.990000000000002,
                            Stock = 250.0,
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3660)
                        });
                });

            modelBuilder.Entity("Domain.ProductsCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("Role")
                        .HasColumnType("boolean");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2e5360c3-2ade-4fd8-9bdf-62461914f598"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 833, DateTimeKind.Utc).AddTicks(4490),
                            Email = "example1@mail.com",
                            Name = "Berke",
                            Password = "k/IjKMOsqgkhOkR7hIfBpg==.1bT858Pkzd2mHeQikdORF3RjYoK3Gwndu5ln1Spw8zE=",
                            Role = true,
                            Surname = "Öztürk",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 833, DateTimeKind.Utc).AddTicks(4490)
                        },
                        new
                        {
                            Id = new Guid("91eab9f7-fe42-4682-aec2-c5779e996a29"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 841, DateTimeKind.Utc).AddTicks(9110),
                            Email = "example2@mail.com",
                            Name = "Doğa Su",
                            Password = "Uc0UcZUaPAVOwamWMjkWHg==.CBhO2zMeHA4dB+WBRw4RSZA4II5dmhKccakVEcGKyY0=",
                            Role = false,
                            Surname = "Türkileri",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 841, DateTimeKind.Utc).AddTicks(9110)
                        },
                        new
                        {
                            Id = new Guid("3d11d32e-6837-4c3d-9ddd-93c00a92ea22"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 850, DateTimeKind.Utc).AddTicks(7000),
                            Email = "example3@mail.com",
                            Name = "Ervin",
                            Password = "cfYOrBNMlEhxRhUf/bVHkg==.9IxQ4Fd78V93poOmNAEmT4BmLDaG/iq0YMVAhISc1xo=",
                            Role = false,
                            Surname = "Parlak",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 850, DateTimeKind.Utc).AddTicks(7000)
                        },
                        new
                        {
                            Id = new Guid("3f7fd603-ae9d-41b4-80cc-f71f4599695c"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 860, DateTimeKind.Utc).AddTicks(4020),
                            Email = "example4@mail.com",
                            Name = "Gamze Naz",
                            Password = "UcGZCHCflmcVyQF9CJ/MwQ==.x/9e9rIwEGjgbbFAtSoI4K3NTQrBncwcAFzjx273vdM=",
                            Role = false,
                            Surname = "Yıldırım",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 860, DateTimeKind.Utc).AddTicks(4020)
                        },
                        new
                        {
                            Id = new Guid("fb0a9f34-fefe-4a88-a292-53b92a7bdb93"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 869, DateTimeKind.Utc).AddTicks(8480),
                            Email = "example5@mail.com",
                            Name = "Atakan",
                            Password = "ke37r/fH3m4LnVgVPF7UJQ==.+d3rxVCqn+kDsM8JAzOKf7RpaYzB5Rmg6Lq0WrbnHRI=",
                            Role = false,
                            Surname = "Yıldırım",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 869, DateTimeKind.Utc).AddTicks(8480)
                        },
                        new
                        {
                            Id = new Guid("06e7a3fe-3184-443a-91c5-f0afe47202ee"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 876, DateTimeKind.Utc).AddTicks(7080),
                            Email = "example6@mail.com",
                            Name = "Ahmet Mümtaz",
                            Password = "EB4D9AGXvh/ZwyM6YR2GIw==.7NB4fJyXjePft2KGHcozPQkhH5TrYE+6t3q3aAUwGQQ=",
                            Role = false,
                            Surname = "Taylan",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 876, DateTimeKind.Utc).AddTicks(7080)
                        },
                        new
                        {
                            Id = new Guid("7eb568ef-e3a0-43d1-8165-61981b3cbe9b"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 883, DateTimeKind.Utc).AddTicks(1160),
                            Email = "example7@mail.com",
                            Name = "Cem",
                            Password = "UUQAlWt64XYe/e1BTlj/6g==.a8bgNX/+goGhTVSkF+Byz947XvEwaZQcZtWTNHt8b08=",
                            Role = false,
                            Surname = "Yılmaz",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 883, DateTimeKind.Utc).AddTicks(1160)
                        },
                        new
                        {
                            Id = new Guid("2b8b87a8-2ae2-496a-8720-d72ee40e32ac"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 889, DateTimeKind.Utc).AddTicks(5110),
                            Email = "example8@mail.com",
                            Name = "Şahan",
                            Password = "SE/2dWbXnOB3CBKyQTn3WA==.hbBlK5Ltp3kfn5f5lfRfIpiW0CUt69LumCnI/zayffE=",
                            Role = false,
                            Surname = "Gökbakar",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 889, DateTimeKind.Utc).AddTicks(5110)
                        },
                        new
                        {
                            Id = new Guid("7400829f-7021-46dd-a464-6079f015807f"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 895, DateTimeKind.Utc).AddTicks(8670),
                            Email = "example9@mail.com",
                            Name = "Mahsun",
                            Password = "0vtcVQT7IXPUqJU+XF4v1Q==.YIQCXOkyceb95XmtMwqRm2S8WNpJUstvfZqV6zF6Ne0=",
                            Role = false,
                            Surname = "Kırmızıgül",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 895, DateTimeKind.Utc).AddTicks(8670)
                        },
                        new
                        {
                            Id = new Guid("e2967197-930b-4f44-b90e-7f8b6ff6a75d"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 902, DateTimeKind.Utc).AddTicks(2440),
                            Email = "example10@mail.com",
                            Name = "Erkin",
                            Password = "PqGbDZ0sTYD2NWLLq+omEw==.o+BidiT1c+QO7Rx4R44Kk6rOTrDyexB6k8jQwxrehSs=",
                            Role = false,
                            Surname = "Karaçay",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 902, DateTimeKind.Utc).AddTicks(2440)
                        },
                        new
                        {
                            Id = new Guid("a94b43c4-0fc8-4665-a86f-cc5cd1e7f505"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 908, DateTimeKind.Utc).AddTicks(6320),
                            Email = "example11@mail.com",
                            Name = "Ozan",
                            Password = "0g5Y960fSy9laczctg82fQ==.SdcA+3/OIGDgCXSVUMfxHt/YDkuyuY4bzU0GYOSltOY=",
                            Role = false,
                            Surname = "İmamhatipoğlu",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 908, DateTimeKind.Utc).AddTicks(6320)
                        },
                        new
                        {
                            Id = new Guid("1931a463-5801-4ccb-9527-54f621d5ee39"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 915, DateTimeKind.Utc).AddTicks(6120),
                            Email = "example12@mail.com",
                            Name = "Barkın",
                            Password = "4Ef0flAL3YhVcbkFcNocng==.1snfbObffAeO3Xb+EjcVLCl2uG6GxY3T3Y/qXPA/oRQ=",
                            Role = false,
                            Surname = "Özkaplan",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 915, DateTimeKind.Utc).AddTicks(6120)
                        },
                        new
                        {
                            Id = new Guid("020a383b-7d70-4685-bd94-6e0dcd4c0db0"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 921, DateTimeKind.Utc).AddTicks(9560),
                            Email = "example13@mail.com",
                            Name = "Barış Onur",
                            Password = "gZaC/dwS3JNg4BO7bZHZ6g==.lfk0eWYC9vVScl5lsh9m2t9zwbi0M+CBYImbO4lqPLE=",
                            Role = false,
                            Surname = "Aydın",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 921, DateTimeKind.Utc).AddTicks(9560)
                        },
                        new
                        {
                            Id = new Guid("5cc55018-3598-4034-8cab-5a535af8c59c"),
                            CreatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3050),
                            Email = "example14@mail.com",
                            Name = "Deniz",
                            Password = "pjjfw4/MAR8gWbM/ajZJyQ==.WjphaIZznXYRCGehBiiHnjqfN+zpmiIO5zOH6krvpIo=",
                            Role = false,
                            Surname = "Zarshat",
                            UpdatedDate = new DateTime(2024, 8, 28, 12, 33, 31, 928, DateTimeKind.Utc).AddTicks(3050)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
