// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persistance.Contexts;

#nullable disable

namespace Persistance.Migrations
{
    [DbContext(typeof(ECommerceAPIDbContext))]
    [Migration("20240729144004_mig_10")]
    partial class mig_10
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a44c91dd-e978-4b75-8efa-fea0135b3cd6"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 115, DateTimeKind.Utc).AddTicks(5910),
                            Email = "example1@mail.com",
                            Name = "Berke Öztürk",
                            Password = "G5OZmLjVFiadwqIxAlUK0QOz+suIAeDM1hcL+JY8GSc=",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 115, DateTimeKind.Utc).AddTicks(5910)
                        },
                        new
                        {
                            Id = new Guid("a943810d-1ed5-4d6e-a72b-37288197de53"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 121, DateTimeKind.Utc).AddTicks(9820),
                            Email = "example2@mail.com",
                            Name = "Doğa Su Türkileri",
                            Password = "ekf3DGLYwCm85q3SMnJlebSHL78d+tf0Io7LQZ8qSac=",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 121, DateTimeKind.Utc).AddTicks(9820)
                        },
                        new
                        {
                            Id = new Guid("b864c69f-bb05-4af6-8830-de7c889ba2cd"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 128, DateTimeKind.Utc).AddTicks(2520),
                            Email = "example3@mail.com",
                            Name = "Ervin Parlak",
                            Password = "F+0/bzdyBsWqn2k3QLbMVKMo6pkI9QyeSXRQa+9THy4=",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 128, DateTimeKind.Utc).AddTicks(2520)
                        },
                        new
                        {
                            Id = new Guid("92474f7d-70ee-430e-80fb-c4ab74c5ddbe"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 134, DateTimeKind.Utc).AddTicks(4210),
                            Email = "example4@mail.com",
                            Name = "Gamze Naz Yıldırım",
                            Password = "3jx5Ce8sgeA1EP5Lgd0MIcBlnRjn2bk7RBi5Yi7E2Ng=",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 134, DateTimeKind.Utc).AddTicks(4210)
                        },
                        new
                        {
                            Id = new Guid("17c157ea-ea01-4501-897b-08a762e1539d"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 142, DateTimeKind.Utc).AddTicks(2590),
                            Email = "example5@mail.com",
                            Name = "Atakan Yıldırım",
                            Password = "4Dim7oiKc4+2QPXLWAnb7u8FIyDrVvQPz4eoasJp72w=",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 142, DateTimeKind.Utc).AddTicks(2590)
                        },
                        new
                        {
                            Id = new Guid("764abf2f-a4d3-4e8e-98e3-f4e501bdae0c"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 148, DateTimeKind.Utc).AddTicks(3970),
                            Email = "example6@mail.com",
                            Name = "Ahmet Mümtaz Taylan",
                            Password = "xCRJNghD4RxLFXd3T7Tu8WS4aePqZyY0Fmv/GKyS9q4=",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 148, DateTimeKind.Utc).AddTicks(3970)
                        },
                        new
                        {
                            Id = new Guid("41a7a8c4-fdcd-4266-adc4-a5f3915cc20b"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 154, DateTimeKind.Utc).AddTicks(5420),
                            Email = "example7@mail.com",
                            Name = "Cem Yılmaz",
                            Password = "9ezQBox1rnCK+yOiPjduKD+fodzr5OOeyXdAuh7BGzM=",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 154, DateTimeKind.Utc).AddTicks(5420)
                        },
                        new
                        {
                            Id = new Guid("cca027b5-5d27-406a-9d70-241285b6c021"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 160, DateTimeKind.Utc).AddTicks(6400),
                            Email = "example8@mail.com",
                            Name = "Şahan Gökbakar",
                            Password = "fIkEDckDcFAz7rm82kBY8+76jH3MeTQ9QGWAtxDgHiU=",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 160, DateTimeKind.Utc).AddTicks(6400)
                        },
                        new
                        {
                            Id = new Guid("9de7b83c-0d07-47af-b98e-6884519b68d5"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 166, DateTimeKind.Utc).AddTicks(7480),
                            Email = "example9@mail.com",
                            Name = "Mahsun Kırmızıgül",
                            Password = "zXhWrrk5YLmI0EHCEdVX0MU0Z0BU7OlZ2CQXtQfN+Dw=",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 166, DateTimeKind.Utc).AddTicks(7480)
                        },
                        new
                        {
                            Id = new Guid("a7a8ac66-721f-437f-9ca2-ab91b017405a"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 172, DateTimeKind.Utc).AddTicks(8700),
                            Email = "example10@mail.com",
                            Name = "Erkin Karaçay",
                            Password = "tRhpVUl5mRe9n5hPcyjUhH/ZvttHt+9PuCHe30X3ngY=",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 172, DateTimeKind.Utc).AddTicks(8700)
                        },
                        new
                        {
                            Id = new Guid("d7f9084d-c1da-45ac-b8e0-d095f467305c"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 178, DateTimeKind.Utc).AddTicks(9980),
                            Email = "example11@mail.com",
                            Name = "Ozan İmamhatipoğlu",
                            Password = "EdcBcJ8iKXqsXnPF7ylNN8jv3Kjx4ox5bU1YCZPaTtg=",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 178, DateTimeKind.Utc).AddTicks(9980)
                        },
                        new
                        {
                            Id = new Guid("2d1027eb-593b-438c-a0a5-dab66c3f5e27"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 185, DateTimeKind.Utc).AddTicks(5880),
                            Email = "example12@mail.com",
                            Name = "Barkın Özkaplan",
                            Password = "67pGUJ62P6tGT+eXz4miZkWFLsJyz19HL6uNVPJHTO0=",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 185, DateTimeKind.Utc).AddTicks(5880)
                        },
                        new
                        {
                            Id = new Guid("1574c5a5-eaac-4627-a3a1-4f154d779280"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 191, DateTimeKind.Utc).AddTicks(6760),
                            Email = "example13@mail.com",
                            Name = "Barış Onur Aydın",
                            Password = "XZvGMmcpRIRQ4ij/QUJv4vNnKosFQ1HoMyRTNstSP8U=",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 191, DateTimeKind.Utc).AddTicks(6760)
                        },
                        new
                        {
                            Id = new Guid("ec98ee00-c824-4666-aafa-b932e569203b"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6690),
                            Email = "example14@mail.com",
                            Name = "Deniz Zarshat",
                            Password = "D1A3oRXnOikirXRt3UYGUv2z11iQgwBzq4xpE8GzUdk=",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6690)
                        });
                });

            modelBuilder.Entity("Domain.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8030d00e-7304-498a-b4dc-9a6e7d0ae338"),
                            Address = "2222 Oak Drive, Hillcrest, NY 10001",
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6850),
                            CustomerId = new Guid("70231cce-0530-40c4-916d-f2e6122e40f4"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6850)
                        },
                        new
                        {
                            Id = new Guid("42134d94-1b79-459a-a269-59076cfc6d2f"),
                            Address = "456 Elm Avenue, Oakville, CA 94022",
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6860),
                            CustomerId = new Guid("12e6b107-eb5b-4fc3-a76c-72ff53789db4"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6860)
                        },
                        new
                        {
                            Id = new Guid("6025fb7d-cb29-401a-86ab-bf74a21c64f8"),
                            Address = "10101 Juniper Avenue, Blue Ridge, NC 27501",
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6860),
                            CustomerId = new Guid("7f713619-576e-4528-b821-ddf9d0a0000a"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6860)
                        },
                        new
                        {
                            Id = new Guid("8e32e065-8275-4652-a15c-c6d9ca4ea815"),
                            Address = "9999 Spruce Place, Highland, UT 84003",
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6870),
                            CustomerId = new Guid("54d7e148-18c5-4677-96f4-0b60348fbb96"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6870)
                        },
                        new
                        {
                            Id = new Guid("2b7174a8-e388-4584-bfdc-047249d80924"),
                            Address = "4444 Aspen Court, Meadowbrook, OR 97001",
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6880),
                            CustomerId = new Guid("bbe61aae-85db-4fdf-a226-52020a680d01"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6880)
                        },
                        new
                        {
                            Id = new Guid("9c815b78-97bd-4040-aae6-4f63290ae46f"),
                            Address = "789 Pine Lane, Rivertown, TX 75001",
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6890),
                            CustomerId = new Guid("033e9422-2800-4afc-858d-fbaa2d1a8597"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6890)
                        },
                        new
                        {
                            Id = new Guid("e2ca0f14-5252-48ac-836c-cb000b0aaf60"),
                            Address = "5555 Redwood Street, Greenfield, AZ 85001",
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6890),
                            CustomerId = new Guid("75ca78fc-2f7e-4594-b8c0-e872209ce250"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6890)
                        },
                        new
                        {
                            Id = new Guid("60b56e23-2305-42ca-80c6-a0dc9fd04cad"),
                            Address = "7777 Poplar Path, Brookhaven, GA 30301",
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6900),
                            CustomerId = new Guid("26eca96a-77d8-4448-97d0-df46ba00fc40"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6900)
                        },
                        new
                        {
                            Id = new Guid("894bea55-364f-4dac-b0a2-09707f411eb4"),
                            Address = "1010 Birch Road, Forestville, WA 98001",
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6900),
                            CustomerId = new Guid("f205e09b-acce-4781-a212-ef5ee3180339"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6910)
                        },
                        new
                        {
                            Id = new Guid("68967530-a4cc-4dc9-9593-11b0c181664a"),
                            Address = "8888 Cypress Circle, Riverview, MI 48201",
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6910),
                            CustomerId = new Guid("e32a838d-ee1b-4e24-b6a9-8697131eaa3b"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6910)
                        });
                });

            modelBuilder.Entity("Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<double>("Stock")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("154a678d-8b66-4467-90c9-9a6fe9a08971"),
                            CategoryId = new Guid("38563825-e48f-4166-9dcd-be27bdb2baaf"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6940),
                            Description = "An ergonomic office chair with adjustable height and lumbar support. Ideal for long hours of work.",
                            Name = "BirchCraft Office Chair",
                            Price = 149.99000000000001,
                            Stock = 150.0,
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6940)
                        },
                        new
                        {
                            Id = new Guid("2dc5979e-2185-45ee-9adf-00b9daedfa00"),
                            CategoryId = new Guid("9f644a59-c6b3-4c66-acb8-c4d5398ed136"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6950),
                            Description = "Lightweight and comfortable running shoes with breathable mesh and cushioned sole.",
                            Name = "OakHill Running Shoes",
                            Price = 89.989999999999995,
                            Stock = 300.0,
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6950)
                        },
                        new
                        {
                            Id = new Guid("0fc2d043-0714-4a4d-ab96-e9b73a21e9e5"),
                            CategoryId = new Guid("67afe7d7-ea69-48c1-9979-a74d4f9bfc72"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6950),
                            Description = "A portable Bluetooth speaker with high-quality sound and long battery life. Perfectforoutdooractivities.",
                            Name = "WillowWave Bluetooth Speaker",
                            Price = 59.990000000000002,
                            Stock = 250.0,
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6950)
                        },
                        new
                        {
                            Id = new Guid("3a0320f0-a2ce-4580-8d36-b136f0005d8c"),
                            CategoryId = new Guid("403f5b02-d059-42be-b644-ea1d6fd3a833"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6960),
                            Description = "A stylish LED lamp with adjustable brightness and color temperature. Ideal for reading and working.",
                            Name = "AspenGlow LED Lamp",
                            Price = 39.990000000000002,
                            Stock = 180.0,
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6960)
                        },
                        new
                        {
                            Id = new Guid("08667153-bf9d-4915-8f84-001916476eeb"),
                            CategoryId = new Guid("a16f567b-5b84-4398-917c-c5ac5d998b7f"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6960),
                            Description = "A powerful gaming laptop with high-end graphics and fast processing speed. Ideal for gamers.",
                            Name = "RedwoodX Gaming Laptop",
                            Price = 1299.99,
                            Stock = 30.0,
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6960)
                        },
                        new
                        {
                            Id = new Guid("a6d17b8b-5c6a-4482-9a57-6a457782c0a5"),
                            CategoryId = new Guid("3d5c72a6-3fc4-404e-9f76-f8554182849e"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6970),
                            Description = "A smart home security camera with night vision and motion detection. Connects to your smartphone.",
                            Name = "FirNest Home Security Camera",
                            Price = 99.989999999999995,
                            Stock = 100.0,
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6970)
                        },
                        new
                        {
                            Id = new Guid("dcd2c947-6079-4529-b92b-0da24e40f26e"),
                            CategoryId = new Guid("8bb87764-34f0-4a1d-aa2a-7c46ef8275b8"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6980),
                            Description = "A fitness tracker with heart rate monitoring, step counting, and sleep tracking. Waterproof design.",
                            Name = "PoplarPulse Fitness Tracker",
                            Price = 49.990000000000002,
                            Stock = 220.0,
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6980)
                        },
                        new
                        {
                            Id = new Guid("71874edc-e11b-4c3f-8299-a81f91c40cc2"),
                            CategoryId = new Guid("bfb4778f-44b2-456b-ad6f-f05e1f9c03e8"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6980),
                            Description = "A non-slip yoga mat with extra cushioning for comfort. Perfect for yoga and pilates.",
                            Name = "CypressFlow Yoga Mat",
                            Price = 29.989999999999998,
                            Stock = 500.0,
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6980)
                        },
                        new
                        {
                            Id = new Guid("bb1d520a-fb43-4ca6-9718-49745d4222e6"),
                            CategoryId = new Guid("8f6d99a3-13d6-49f2-9643-1234d886ee62"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6990),
                            Description = "A high-performance drone with HD camera and long battery life. Ideal for aerial photography.",
                            Name = "SpruceSky Drone",
                            Price = 349.99000000000001,
                            Stock = 60.0,
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(6990)
                        },
                        new
                        {
                            Id = new Guid("8b92dfd3-d7b7-40aa-a6b4-7b1bd1597719"),
                            CategoryId = new Guid("caddc477-7ed0-4c2f-84ac-2f0093ef1394"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(7000),
                            Description = "An insulated water bottle that keeps drinks hot or cold for hours. Made from stainless steel.",
                            Name = "JuniperPure Water Bottle",
                            Price = 24.989999999999998,
                            Stock = 400.0,
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(7000)
                        },
                        new
                        {
                            Id = new Guid("657f3107-e583-4bf5-a19c-cec337d83f3c"),
                            CategoryId = new Guid("285e9f5d-9f6f-4eb0-8975-ca83190bc541"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(7000),
                            Description = "A durable and flexible smartphone case that provides excellent protection. Compatible with most models.",
                            Name = "MapleFlex Smartphone Case",
                            Price = 19.989999999999998,
                            Stock = 350.0,
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(7000)
                        },
                        new
                        {
                            Id = new Guid("f5ce7751-8e6b-42e8-b2c3-29ff1a3a36a7"),
                            CategoryId = new Guid("b99a3cbe-8560-4257-9581-e96c4f132963"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(7010),
                            Description = "A contemporary table lamp with touch control and adjustable brightness. Perfect for any room.",
                            Name = "ElmGlow Table Lamp",
                            Price = 34.990000000000002,
                            Stock = 140.0,
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(7010)
                        },
                        new
                        {
                            Id = new Guid("a5d7bf2a-c07a-4f11-93fc-f20556bd930e"),
                            CategoryId = new Guid("a266e915-9ea9-489d-9f90-c25dba1acb58"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(7010),
                            Description = "A professional kitchen knife set with high-carbon stainless steel blades. Includes 6 knives and ablock.",
                            Name = "PineEdge Kitchen Knife Set",
                            Price = 89.989999999999995,
                            Stock = 85.0,
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(7010)
                        },
                        new
                        {
                            Id = new Guid("872d3421-5038-49e1-8a15-008068ea46fa"),
                            CategoryId = new Guid("dc585a8a-b9d5-4c56-86e2-20a13fec79c1"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(7020),
                            Description = "High-quality wireless earbuds with noise cancellation and long battery life. Comes with a chargingcase.",
                            Name = "BirchSound Wireless Earbuds",
                            Price = 79.989999999999995,
                            Stock = 300.0,
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(7020)
                        },
                        new
                        {
                            Id = new Guid("c9683cb5-a495-482c-bc28-9daefabc5c63"),
                            CategoryId = new Guid("a4482f7e-9184-4b75-8a54-378be8939bea"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(7030),
                            Description = "A programmable coffee maker with a built-in grinder and timer. Makes up to 12 cups of coffee.",
                            Name = "OakPure Coffee Maker",
                            Price = 129.99000000000001,
                            Stock = 90.0,
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(7030)
                        },
                        new
                        {
                            Id = new Guid("39e167dd-00e9-42a1-bc0a-cf4f2c0b4c6d"),
                            CategoryId = new Guid("5e4e264d-e5ad-4160-8aa6-cdf608c766ae"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(7030),
                            Description = "A lightweight and durable camping tent that accommodates up to 4 people. Easy to set up.",
                            Name = "WillowLite Camping Tent",
                            Price = 199.99000000000001,
                            Stock = 70.0,
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(7030)
                        },
                        new
                        {
                            Id = new Guid("810d90ef-56f5-48ea-8682-d38b9fcc61e8"),
                            CategoryId = new Guid("c2e85e5a-92d6-4a08-a0ef-567d18f54e84"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(7040),
                            Description = "A compact mini fridge with adjustable temperature settings. Perfect for dorm rooms and offices.",
                            Name = "AspenCool Mini Fridge",
                            Price = 149.99000000000001,
                            Stock = 120.0,
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(7040)
                        },
                        new
                        {
                            Id = new Guid("8f1509cd-e282-4b0f-ab82-4b457ea90ebc"),
                            CategoryId = new Guid("fc3daa74-0b85-438e-8e87-8a7db31df605"),
                            CreatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(7040),
                            Description = "A high-capacity power bank with fast charging technology. Compatible with all USB devices.",
                            Name = "RedwoodMax Power Bank",
                            Price = 39.990000000000002,
                            Stock = 250.0,
                            UpdatedDate = new DateTime(2024, 7, 29, 14, 40, 4, 197, DateTimeKind.Utc).AddTicks(7040)
                        });
                });

            modelBuilder.Entity("Domain.ProductsCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
