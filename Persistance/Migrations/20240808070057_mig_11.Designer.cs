// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persistance.Contexts;

#nullable disable

namespace Persistance.Migrations
{
    [DbContext(typeof(ECommerceAPIDbContext))]
    [Migration("20240808070057_mig_11")]
    partial class mig_11
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1ffd9cf6-89ce-419f-be72-44dce53d137f"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 541, DateTimeKind.Utc).AddTicks(550),
                            Email = "example1@mail.com",
                            Name = "Berke Öztürk",
                            Password = "woK+ML+2b3uyZYta9Pf6gA==.p9/lHnjuOYypbJvPVwzAVYpz8tm1ORcfwq0PNXMOMcQ=",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 541, DateTimeKind.Utc).AddTicks(550)
                        },
                        new
                        {
                            Id = new Guid("8b7eb17f-c554-47f3-9fba-a0e09da08e8d"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 547, DateTimeKind.Utc).AddTicks(3370),
                            Email = "example2@mail.com",
                            Name = "Doğa Su Türkileri",
                            Password = "4n+4W0ea736QZFv7VPVdbw==.f0u7YCD0Wmxcr0KzU9hMgajF8JRMC/5Z7r3WmyvwqWQ=",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 547, DateTimeKind.Utc).AddTicks(3370)
                        },
                        new
                        {
                            Id = new Guid("4d38e1b5-93a0-43d3-8a95-22964794f76d"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 553, DateTimeKind.Utc).AddTicks(6020),
                            Email = "example3@mail.com",
                            Name = "Ervin Parlak",
                            Password = "M1fbjXLJnq9MDyQBfJbHXQ==.MIlC1hdCK0SVyRfooW2K6wwt44dfN7WLwddgc1p157I=",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 553, DateTimeKind.Utc).AddTicks(6020)
                        },
                        new
                        {
                            Id = new Guid("4b968ef8-e190-4865-bd2e-f062c31e0e8c"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 560, DateTimeKind.Utc).AddTicks(520),
                            Email = "example4@mail.com",
                            Name = "Gamze Naz Yıldırım",
                            Password = "tmspOXBzeqq+Bach50J/Ag==.P3Ud9mpSSS/7PiJKYMMqNDCahYzH0EUITZZPCB6PdK8=",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 560, DateTimeKind.Utc).AddTicks(520)
                        },
                        new
                        {
                            Id = new Guid("2d4cf6c9-e0b1-445f-8edb-df89d204ba37"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 567, DateTimeKind.Utc).AddTicks(9200),
                            Email = "example5@mail.com",
                            Name = "Atakan Yıldırım",
                            Password = "QjGxdPcXnVmvAQ75VhnOYQ==.13USZ2rbd8R9DM4h0UVNvDt3FCpHEO3T4hxlG/538Lk=",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 567, DateTimeKind.Utc).AddTicks(9200)
                        },
                        new
                        {
                            Id = new Guid("a55002cb-c644-49f0-9d30-1e8a0b32f76f"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 574, DateTimeKind.Utc).AddTicks(1230),
                            Email = "example6@mail.com",
                            Name = "Ahmet Mümtaz Taylan",
                            Password = "41KTtxcZWasjsIRm1XMuOQ==.gHF3bgTw/4VLEqPLsb51U0LqjQvILj5VC1Ofj7zp7bA=",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 574, DateTimeKind.Utc).AddTicks(1230)
                        },
                        new
                        {
                            Id = new Guid("2926ba09-1b5d-4bee-b708-83e91344f308"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 580, DateTimeKind.Utc).AddTicks(3060),
                            Email = "example7@mail.com",
                            Name = "Cem Yılmaz",
                            Password = "PHZH81DbNiZRtinm+xCHTQ==.lyP5mKmdS6UiaR1HEoK4E8NciSf/5GC2s03dx4Z/srk=",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 580, DateTimeKind.Utc).AddTicks(3060)
                        },
                        new
                        {
                            Id = new Guid("09007d21-4ce9-4c44-8a0e-f6642f1ddf07"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 586, DateTimeKind.Utc).AddTicks(5030),
                            Email = "example8@mail.com",
                            Name = "Şahan Gökbakar",
                            Password = "nQ6UFu1knkl2UZU4jqdKIg==.sGR6vG4KzX838Q1HU5t3hKiQ83hzqR24gHsbIzZCTMs=",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 586, DateTimeKind.Utc).AddTicks(5030)
                        },
                        new
                        {
                            Id = new Guid("c9569b13-f5b9-4125-8113-da1414764c82"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 592, DateTimeKind.Utc).AddTicks(7330),
                            Email = "example9@mail.com",
                            Name = "Mahsun Kırmızıgül",
                            Password = "oQ5BFVdNEQMbYyMkT/QR5g==.bJcaJR5OxcMj1Rsmv5SutJPpgZh+b1y8nzvKN+GZbxw=",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 592, DateTimeKind.Utc).AddTicks(7330)
                        },
                        new
                        {
                            Id = new Guid("72e0165d-168a-433d-ac1a-e9b4942d4ab5"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 598, DateTimeKind.Utc).AddTicks(9230),
                            Email = "example10@mail.com",
                            Name = "Erkin Karaçay",
                            Password = "3nnVCneEoxf5r8eGm8I+6Q==.2KjpI/uBhuHQlVPAa36PRkittXYribw3RBy344aMlPs=",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 598, DateTimeKind.Utc).AddTicks(9230)
                        },
                        new
                        {
                            Id = new Guid("7d0acf1a-1d19-4eb9-a069-11e78996e08a"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 605, DateTimeKind.Utc).AddTicks(1460),
                            Email = "example11@mail.com",
                            Name = "Ozan İmamhatipoğlu",
                            Password = "u3XPdJf6vIUh7hEfq9WN2w==.au9gSrmoGc9rX4eSitzBXEkCUanY0Y1doPUJzxshT+w=",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 605, DateTimeKind.Utc).AddTicks(1460)
                        },
                        new
                        {
                            Id = new Guid("354881a7-457e-49a7-948b-04b55dfd0a2e"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 611, DateTimeKind.Utc).AddTicks(9480),
                            Email = "example12@mail.com",
                            Name = "Barkın Özkaplan",
                            Password = "DGnDT3PLk5H6QT++pisXNQ==.SwKOEYJnW3Wh405IAPEnXRRZXB3hGEOCF93dcLCocgU=",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 611, DateTimeKind.Utc).AddTicks(9480)
                        },
                        new
                        {
                            Id = new Guid("e3aa92d3-30b0-48ef-b949-4d617fbceb84"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 618, DateTimeKind.Utc).AddTicks(1570),
                            Email = "example13@mail.com",
                            Name = "Barış Onur Aydın",
                            Password = "xVA4UWJK0Sb4XweKanzMZg==.bHtof3o3E7yFK5jP/3XE7LteFxs3cLUUYwXnvgfm5jE=",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 618, DateTimeKind.Utc).AddTicks(1570)
                        },
                        new
                        {
                            Id = new Guid("12aa0cc7-ace9-4256-b61f-0fc0d3da8804"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3410),
                            Email = "example14@mail.com",
                            Name = "Deniz Zarshat",
                            Password = "GEDKNly0OeRASueq+PcsAw==.XYjFJRt6xoVwHogawM/GiVAvky7rxOoGzN5mgU1qpUU=",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3410)
                        });
                });

            modelBuilder.Entity("Domain.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d5ce8df4-90ee-493f-b562-be427988c984"),
                            Address = "2222 Oak Drive, Hillcrest, NY 10001",
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3610),
                            CustomerId = new Guid("961803ef-8dc7-4960-adb9-02ffbfb8bd6f"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3610)
                        },
                        new
                        {
                            Id = new Guid("6cec4602-dce1-4079-b9d5-b7da77c68242"),
                            Address = "456 Elm Avenue, Oakville, CA 94022",
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3610),
                            CustomerId = new Guid("4c9049e9-1480-463b-bf3e-ab7e53608a39"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3610)
                        },
                        new
                        {
                            Id = new Guid("1f120e32-93be-43a4-bed3-85bd4d5e794e"),
                            Address = "10101 Juniper Avenue, Blue Ridge, NC 27501",
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3620),
                            CustomerId = new Guid("9a6c3b1e-0348-4ac3-8f56-156e8d07b3ba"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3620)
                        },
                        new
                        {
                            Id = new Guid("0635d9a2-318e-405a-a3c9-6473f9d820be"),
                            Address = "9999 Spruce Place, Highland, UT 84003",
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3630),
                            CustomerId = new Guid("a851ed18-368c-43ed-8f1d-4435f87d40d4"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3630)
                        },
                        new
                        {
                            Id = new Guid("1edaae63-5714-4333-b43f-f7a706bd4912"),
                            Address = "4444 Aspen Court, Meadowbrook, OR 97001",
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3630),
                            CustomerId = new Guid("98a562bd-1060-474c-b4ca-89b8d7e8bb88"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3630)
                        },
                        new
                        {
                            Id = new Guid("5749a3c2-3dbc-4319-8671-45a1df429d77"),
                            Address = "789 Pine Lane, Rivertown, TX 75001",
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3640),
                            CustomerId = new Guid("9e8c11d5-0018-462c-b7be-0710ea96eb67"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3640)
                        },
                        new
                        {
                            Id = new Guid("21e0487d-28a3-4107-901f-959303d6f62b"),
                            Address = "5555 Redwood Street, Greenfield, AZ 85001",
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3640),
                            CustomerId = new Guid("a2833b3f-e84e-4188-933d-d88f3536e36b"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3640)
                        },
                        new
                        {
                            Id = new Guid("1c218c83-f310-412a-9cf2-6d4fc868ab99"),
                            Address = "7777 Poplar Path, Brookhaven, GA 30301",
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3650),
                            CustomerId = new Guid("b47a7b71-1e33-4cb9-8fb6-8b4016b26d69"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3650)
                        },
                        new
                        {
                            Id = new Guid("15917048-091f-4edf-9687-b96fce3a3826"),
                            Address = "1010 Birch Road, Forestville, WA 98001",
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3660),
                            CustomerId = new Guid("15fb1e70-d32d-4dab-9be7-fe6e70ecea74"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3660)
                        },
                        new
                        {
                            Id = new Guid("23532314-6950-413e-83ab-63111571dba6"),
                            Address = "8888 Cypress Circle, Riverview, MI 48201",
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3660),
                            CustomerId = new Guid("b8abc414-8d5f-476b-ae77-e732f3f3f479"),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3660)
                        });
                });

            modelBuilder.Entity("Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<double>("Stock")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b8a930f9-2477-4210-9024-e5785f025c5d"),
                            CategoryId = new Guid("f81caba5-b1a0-415a-a8cf-f5259b497427"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3690),
                            Description = "An ergonomic office chair with adjustable height and lumbar support. Ideal for long hours of work.",
                            ImageUrl = " ",
                            Name = "BirchCraft Office Chair",
                            Price = 149.99000000000001,
                            Stock = 150.0,
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3690)
                        },
                        new
                        {
                            Id = new Guid("1d08d102-e977-4a6e-b666-49c8bee0c4cd"),
                            CategoryId = new Guid("eafa0309-32a7-4ee9-9ae8-4e2daa841a2e"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3700),
                            Description = "Lightweight and comfortable running shoes with breathable mesh and cushioned sole.",
                            ImageUrl = " ",
                            Name = "OakHill Running Shoes",
                            Price = 89.989999999999995,
                            Stock = 300.0,
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3700)
                        },
                        new
                        {
                            Id = new Guid("d57ef050-9d46-4265-992f-94b3080ab1fd"),
                            CategoryId = new Guid("20162b14-3683-43de-bac7-b1f8771cfe5d"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3710),
                            Description = "A portable Bluetooth speaker with high-quality sound and long battery life. Perfectforoutdooractivities.",
                            ImageUrl = " ",
                            Name = "WillowWave Bluetooth Speaker",
                            Price = 59.990000000000002,
                            Stock = 250.0,
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3710)
                        },
                        new
                        {
                            Id = new Guid("c874fab0-9158-4563-8233-779ff5074e4c"),
                            CategoryId = new Guid("c173f6eb-43d8-4e49-a30f-92b51e74522c"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3710),
                            Description = "A stylish LED lamp with adjustable brightness and color temperature. Ideal for reading and working.",
                            ImageUrl = " ",
                            Name = "AspenGlow LED Lamp",
                            Price = 39.990000000000002,
                            Stock = 180.0,
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3710)
                        },
                        new
                        {
                            Id = new Guid("6824d5df-77f4-4bda-9ed1-fd818b86886e"),
                            CategoryId = new Guid("b2016d8b-deba-4d21-af28-1768056bc280"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3720),
                            Description = "A powerful gaming laptop with high-end graphics and fast processing speed. Ideal for gamers.",
                            ImageUrl = " ",
                            Name = "RedwoodX Gaming Laptop",
                            Price = 1299.99,
                            Stock = 30.0,
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3720)
                        },
                        new
                        {
                            Id = new Guid("34e53043-848b-4b1f-bc26-998c62c8cfbd"),
                            CategoryId = new Guid("b3bed20c-04b9-45f4-9177-7fce46437b05"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3720),
                            Description = "A smart home security camera with night vision and motion detection. Connects to your smartphone.",
                            ImageUrl = " ",
                            Name = "FirNest Home Security Camera",
                            Price = 99.989999999999995,
                            Stock = 100.0,
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3720)
                        },
                        new
                        {
                            Id = new Guid("b0ff7b0f-93b0-496b-b935-075780d4e74c"),
                            CategoryId = new Guid("5f94bc83-45f1-4567-83b7-4065de3cf765"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3730),
                            Description = "A fitness tracker with heart rate monitoring, step counting, and sleep tracking. Waterproof design.",
                            ImageUrl = " ",
                            Name = "PoplarPulse Fitness Tracker",
                            Price = 49.990000000000002,
                            Stock = 220.0,
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3730)
                        },
                        new
                        {
                            Id = new Guid("b268bf8c-e92b-4516-bfe3-edb330344867"),
                            CategoryId = new Guid("20ea8e05-3177-4dc5-988a-287d1ecc829a"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3740),
                            Description = "A non-slip yoga mat with extra cushioning for comfort. Perfect for yoga and pilates.",
                            ImageUrl = " ",
                            Name = "CypressFlow Yoga Mat",
                            Price = 29.989999999999998,
                            Stock = 500.0,
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3740)
                        },
                        new
                        {
                            Id = new Guid("774ed65c-0a1e-4f00-a5f0-2b62751a69ae"),
                            CategoryId = new Guid("829e518a-7da7-4247-88a4-93923d61cf11"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3740),
                            Description = "A high-performance drone with HD camera and long battery life. Ideal for aerial photography.",
                            ImageUrl = " ",
                            Name = "SpruceSky Drone",
                            Price = 349.99000000000001,
                            Stock = 60.0,
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3740)
                        },
                        new
                        {
                            Id = new Guid("1eda4e77-0816-4ed6-8146-2669cd5fd785"),
                            CategoryId = new Guid("bfb5bcd8-feb0-4e12-b938-532ecd251143"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3750),
                            Description = "An insulated water bottle that keeps drinks hot or cold for hours. Made from stainless steel.",
                            ImageUrl = " ",
                            Name = "JuniperPure Water Bottle",
                            Price = 24.989999999999998,
                            Stock = 400.0,
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3750)
                        },
                        new
                        {
                            Id = new Guid("186830b2-3e6e-48b6-89fd-8465600c6ed4"),
                            CategoryId = new Guid("648c5326-81f2-4f1f-9f56-07628534b5ef"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3760),
                            Description = "A durable and flexible smartphone case that provides excellent protection. Compatible with most models.",
                            ImageUrl = " ",
                            Name = "MapleFlex Smartphone Case",
                            Price = 19.989999999999998,
                            Stock = 350.0,
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3760)
                        },
                        new
                        {
                            Id = new Guid("bfaf4d91-9c6b-4e04-8de2-04cbdc569e2c"),
                            CategoryId = new Guid("9cd99a87-5eb8-447a-8736-18bfab250072"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3760),
                            Description = "A contemporary table lamp with touch control and adjustable brightness. Perfect for any room.",
                            ImageUrl = " ",
                            Name = "ElmGlow Table Lamp",
                            Price = 34.990000000000002,
                            Stock = 140.0,
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3760)
                        },
                        new
                        {
                            Id = new Guid("e6f31bec-c780-4e8b-b198-b2906e67fd1f"),
                            CategoryId = new Guid("ea911285-12e4-4ffa-8467-9c301b492b3f"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3770),
                            Description = "A professional kitchen knife set with high-carbon stainless steel blades. Includes 6 knives and ablock.",
                            ImageUrl = " ",
                            Name = "PineEdge Kitchen Knife Set",
                            Price = 89.989999999999995,
                            Stock = 85.0,
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3770)
                        },
                        new
                        {
                            Id = new Guid("8de97c76-c468-445c-96be-4603100724b0"),
                            CategoryId = new Guid("bada52ef-8e9f-41be-8f5c-12e32bd4e316"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3780),
                            Description = "High-quality wireless earbuds with noise cancellation and long battery life. Comes with a chargingcase.",
                            ImageUrl = " ",
                            Name = "BirchSound Wireless Earbuds",
                            Price = 79.989999999999995,
                            Stock = 300.0,
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3780)
                        },
                        new
                        {
                            Id = new Guid("4b534b30-602a-4b99-8901-36583a6f0d07"),
                            CategoryId = new Guid("8ea5171f-3753-4bd9-92b3-a3148793e0e0"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3780),
                            Description = "A programmable coffee maker with a built-in grinder and timer. Makes up to 12 cups of coffee.",
                            ImageUrl = " ",
                            Name = "OakPure Coffee Maker",
                            Price = 129.99000000000001,
                            Stock = 90.0,
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3780)
                        },
                        new
                        {
                            Id = new Guid("94c0762e-b55e-4ad5-ac80-2c3c241fc4f5"),
                            CategoryId = new Guid("0df97d39-0cf6-4b25-b38e-1cfb5f741562"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3790),
                            Description = "A lightweight and durable camping tent that accommodates up to 4 people. Easy to set up.",
                            ImageUrl = " ",
                            Name = "WillowLite Camping Tent",
                            Price = 199.99000000000001,
                            Stock = 70.0,
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3790)
                        },
                        new
                        {
                            Id = new Guid("e1bfcb2f-007d-42da-a9b4-e8c49bebf50a"),
                            CategoryId = new Guid("5cfff487-8cc8-4324-acc1-94b92c07145c"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3790),
                            Description = "A compact mini fridge with adjustable temperature settings. Perfect for dorm rooms and offices.",
                            ImageUrl = " ",
                            Name = "AspenCool Mini Fridge",
                            Price = 149.99000000000001,
                            Stock = 120.0,
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3790)
                        },
                        new
                        {
                            Id = new Guid("9d58f56c-6c65-4d66-9d9a-9c3e667f8cee"),
                            CategoryId = new Guid("1426a39b-4c29-4b80-a24c-8f200bd91854"),
                            CreatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3800),
                            Description = "A high-capacity power bank with fast charging technology. Compatible with all USB devices.",
                            ImageUrl = " ",
                            Name = "RedwoodMax Power Bank",
                            Price = 39.990000000000002,
                            Stock = 250.0,
                            UpdatedDate = new DateTime(2024, 8, 8, 7, 0, 57, 624, DateTimeKind.Utc).AddTicks(3800)
                        });
                });

            modelBuilder.Entity("Domain.ProductsCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
