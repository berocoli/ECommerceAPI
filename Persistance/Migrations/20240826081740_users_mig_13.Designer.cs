// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persistance.Contexts;

#nullable disable

namespace Persistance.Migrations
{
    [DbContext(typeof(ECommerceAPIDbContext))]
    [Migration("20240826081740_users_mig_13")]
    partial class users_mig_13
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c90e391-d052-418f-a12f-8db5091fb9be"),
                            Address = "2222 Oak Drive, Hillcrest, NY 10001",
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5760),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5760),
                            UserId = new Guid("3b443e40-3601-4f39-aeee-727bb3c90317")
                        },
                        new
                        {
                            Id = new Guid("5acdf448-7e8b-4b72-958e-744fa70d6252"),
                            Address = "456 Elm Avenue, Oakville, CA 94022",
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5760),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5760),
                            UserId = new Guid("256c52b3-8f88-4b8d-90ab-eb6a2004fa31")
                        },
                        new
                        {
                            Id = new Guid("25fc7ef0-7c6a-432d-9a56-074b99d4d622"),
                            Address = "10101 Juniper Avenue, Blue Ridge, NC 27501",
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5770),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5770),
                            UserId = new Guid("02df638f-c14f-4115-8301-e83165d59cc8")
                        },
                        new
                        {
                            Id = new Guid("2d83f74b-036b-4ff2-a265-d73ef064ee51"),
                            Address = "9999 Spruce Place, Highland, UT 84003",
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5780),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5780),
                            UserId = new Guid("c6c2b197-9a20-4039-9e2d-2e2d58f8e2b8")
                        },
                        new
                        {
                            Id = new Guid("4835cd2f-d076-41e3-8d85-99d07eb397ce"),
                            Address = "4444 Aspen Court, Meadowbrook, OR 97001",
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5780),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5780),
                            UserId = new Guid("86364497-0f07-405f-89e2-88bc3262d6cb")
                        },
                        new
                        {
                            Id = new Guid("0d365429-e505-4433-908f-d2e4ffd0b8f2"),
                            Address = "789 Pine Lane, Rivertown, TX 75001",
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5790),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5790),
                            UserId = new Guid("a196f7b1-42cf-4088-9124-3fd2d65a6d65")
                        },
                        new
                        {
                            Id = new Guid("561b2425-b07e-44d1-bf09-f0c3f3a7c883"),
                            Address = "5555 Redwood Street, Greenfield, AZ 85001",
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5800),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5800),
                            UserId = new Guid("313a7566-1785-47a8-a242-20de138348eb")
                        },
                        new
                        {
                            Id = new Guid("6754713d-5277-4775-9e32-75462ded4e40"),
                            Address = "7777 Poplar Path, Brookhaven, GA 30301",
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5800),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5800),
                            UserId = new Guid("a27d1c27-2c91-44e0-84ff-69f51ee70b73")
                        },
                        new
                        {
                            Id = new Guid("6e33fd07-92c3-446f-a793-08c478ebdfad"),
                            Address = "1010 Birch Road, Forestville, WA 98001",
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5810),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5810),
                            UserId = new Guid("c18b7dc9-edb3-4ced-9e58-c050f72602b1")
                        },
                        new
                        {
                            Id = new Guid("4dc08078-f24d-4ec7-b467-911ceaa6ef17"),
                            Address = "8888 Cypress Circle, Riverview, MI 48201",
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5810),
                            Description = " Please leave the package at the front porch if no one is home.",
                            Status = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5810),
                            UserId = new Guid("9a5d6e93-8027-4732-b047-b4a3c64e4f14")
                        });
                });

            modelBuilder.Entity("Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<double>("Stock")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("633837ae-cccd-4d22-a7c6-6a79add972e9"),
                            CategoryId = new Guid("0d8f78f9-8583-474e-bb1d-16a410a737b0"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5840),
                            Description = "An ergonomic office chair with adjustable height and lumbar support. Ideal for long hours of work.",
                            ImageUrl = " ",
                            Name = "BirchCraft Office Chair",
                            Price = 149.99000000000001,
                            Stock = 150.0,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5840)
                        },
                        new
                        {
                            Id = new Guid("9a4134f8-190c-40fa-98ea-30cf6c88d29b"),
                            CategoryId = new Guid("be98335c-0d68-4283-a3cc-6420fc37e23a"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5850),
                            Description = "Lightweight and comfortable running shoes with breathable mesh and cushioned sole.",
                            ImageUrl = " ",
                            Name = "OakHill Running Shoes",
                            Price = 89.989999999999995,
                            Stock = 300.0,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5850)
                        },
                        new
                        {
                            Id = new Guid("0ad09f4d-f857-4ed8-b7a1-bb2f445bc3ea"),
                            CategoryId = new Guid("f223253c-cf58-411e-a8f7-96181622f484"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5860),
                            Description = "A portable Bluetooth speaker with high-quality sound and long battery life. Perfectforoutdooractivities.",
                            ImageUrl = " ",
                            Name = "WillowWave Bluetooth Speaker",
                            Price = 59.990000000000002,
                            Stock = 250.0,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5860)
                        },
                        new
                        {
                            Id = new Guid("e9fef5eb-f52a-44f6-9d03-d42f83989069"),
                            CategoryId = new Guid("87b942ca-ccf4-4449-873b-3653734c6f1d"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5860),
                            Description = "A stylish LED lamp with adjustable brightness and color temperature. Ideal for reading and working.",
                            ImageUrl = " ",
                            Name = "AspenGlow LED Lamp",
                            Price = 39.990000000000002,
                            Stock = 180.0,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5860)
                        },
                        new
                        {
                            Id = new Guid("62513fdd-4ac0-4362-8396-ae7ff79c98b4"),
                            CategoryId = new Guid("279321e0-c863-43f0-9738-67117d37bbcd"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5870),
                            Description = "A powerful gaming laptop with high-end graphics and fast processing speed. Ideal for gamers.",
                            ImageUrl = " ",
                            Name = "RedwoodX Gaming Laptop",
                            Price = 1299.99,
                            Stock = 30.0,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5870)
                        },
                        new
                        {
                            Id = new Guid("bf2b983d-988b-4710-87e1-f6110f7cc8d0"),
                            CategoryId = new Guid("a211a972-d553-495a-8be8-d5f7aaa202de"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5880),
                            Description = "A smart home security camera with night vision and motion detection. Connects to your smartphone.",
                            ImageUrl = " ",
                            Name = "FirNest Home Security Camera",
                            Price = 99.989999999999995,
                            Stock = 100.0,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5880)
                        },
                        new
                        {
                            Id = new Guid("c603995c-a79d-4c25-b3a5-fa182df1ee33"),
                            CategoryId = new Guid("1b445253-9cf9-4866-8e08-65899d408d93"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5880),
                            Description = "A fitness tracker with heart rate monitoring, step counting, and sleep tracking. Waterproof design.",
                            ImageUrl = " ",
                            Name = "PoplarPulse Fitness Tracker",
                            Price = 49.990000000000002,
                            Stock = 220.0,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5880)
                        },
                        new
                        {
                            Id = new Guid("f5c7dbb1-99af-48ee-92ad-3b82edfdf0a8"),
                            CategoryId = new Guid("b8e4ae18-d0ba-438a-a16a-45f4a06f06f9"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5890),
                            Description = "A non-slip yoga mat with extra cushioning for comfort. Perfect for yoga and pilates.",
                            ImageUrl = " ",
                            Name = "CypressFlow Yoga Mat",
                            Price = 29.989999999999998,
                            Stock = 500.0,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5890)
                        },
                        new
                        {
                            Id = new Guid("8cab617b-2cf2-472f-a094-364d12f289f3"),
                            CategoryId = new Guid("08b5ecd2-03a9-4d16-aac8-1ec648cff218"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5900),
                            Description = "A high-performance drone with HD camera and long battery life. Ideal for aerial photography.",
                            ImageUrl = " ",
                            Name = "SpruceSky Drone",
                            Price = 349.99000000000001,
                            Stock = 60.0,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5900)
                        },
                        new
                        {
                            Id = new Guid("91eafcbe-b8fd-4561-8c64-d19c8654518f"),
                            CategoryId = new Guid("7e8f03c5-287b-4392-82d9-2456f75fc4d2"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5910),
                            Description = "An insulated water bottle that keeps drinks hot or cold for hours. Made from stainless steel.",
                            ImageUrl = " ",
                            Name = "JuniperPure Water Bottle",
                            Price = 24.989999999999998,
                            Stock = 400.0,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5910)
                        },
                        new
                        {
                            Id = new Guid("b05ca891-91f7-4bd7-887e-b3d479d5afc0"),
                            CategoryId = new Guid("b87b606c-6f14-446a-8576-44934d9f0f37"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5920),
                            Description = "A durable and flexible smartphone case that provides excellent protection. Compatible with most models.",
                            ImageUrl = " ",
                            Name = "MapleFlex Smartphone Case",
                            Price = 19.989999999999998,
                            Stock = 350.0,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5920)
                        },
                        new
                        {
                            Id = new Guid("10ccdcd2-2b86-4cca-9213-f1307483b730"),
                            CategoryId = new Guid("5cc2ecfc-6c41-4f89-b7de-ed9377ac553e"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5920),
                            Description = "A contemporary table lamp with touch control and adjustable brightness. Perfect for any room.",
                            ImageUrl = " ",
                            Name = "ElmGlow Table Lamp",
                            Price = 34.990000000000002,
                            Stock = 140.0,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5920)
                        },
                        new
                        {
                            Id = new Guid("91c0f984-113f-4b44-a8a0-42b111941e45"),
                            CategoryId = new Guid("068cd54c-4b5d-49c0-86c1-57626fba70f4"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5930),
                            Description = "A professional kitchen knife set with high-carbon stainless steel blades. Includes 6 knives and ablock.",
                            ImageUrl = " ",
                            Name = "PineEdge Kitchen Knife Set",
                            Price = 89.989999999999995,
                            Stock = 85.0,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5930)
                        },
                        new
                        {
                            Id = new Guid("8a7b240e-02fd-4b07-bf2f-fbcb69a7cf17"),
                            CategoryId = new Guid("5c3a0201-5e87-4b43-8313-dd67824ca7eb"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5970),
                            Description = "High-quality wireless earbuds with noise cancellation and long battery life. Comes with a chargingcase.",
                            ImageUrl = " ",
                            Name = "BirchSound Wireless Earbuds",
                            Price = 79.989999999999995,
                            Stock = 300.0,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5970)
                        },
                        new
                        {
                            Id = new Guid("33642377-872c-47f4-b26e-8d074c9b357e"),
                            CategoryId = new Guid("aef668c6-6392-4b04-8302-2915c7cf652f"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5980),
                            Description = "A programmable coffee maker with a built-in grinder and timer. Makes up to 12 cups of coffee.",
                            ImageUrl = " ",
                            Name = "OakPure Coffee Maker",
                            Price = 129.99000000000001,
                            Stock = 90.0,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5980)
                        },
                        new
                        {
                            Id = new Guid("fe13a957-6c14-4742-b8fb-8fc6b5ada57d"),
                            CategoryId = new Guid("9e508cb2-b4a0-45af-ba77-1c5739d67105"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5990),
                            Description = "A lightweight and durable camping tent that accommodates up to 4 people. Easy to set up.",
                            ImageUrl = " ",
                            Name = "WillowLite Camping Tent",
                            Price = 199.99000000000001,
                            Stock = 70.0,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5990)
                        },
                        new
                        {
                            Id = new Guid("97f3ee84-c5af-44b0-b9cc-cdb283491659"),
                            CategoryId = new Guid("5a9e2180-5fa9-4a94-b32e-dfbcd883cbde"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5990),
                            Description = "A compact mini fridge with adjustable temperature settings. Perfect for dorm rooms and offices.",
                            ImageUrl = " ",
                            Name = "AspenCool Mini Fridge",
                            Price = 149.99000000000001,
                            Stock = 120.0,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5990)
                        },
                        new
                        {
                            Id = new Guid("c9520333-2d09-4cbf-b3ac-f3914d1cb459"),
                            CategoryId = new Guid("2a1ae796-64ce-4c92-9084-fa831042a2d6"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(6000),
                            Description = "A high-capacity power bank with fast charging technology. Compatible with all USB devices.",
                            ImageUrl = " ",
                            Name = "RedwoodMax Power Bank",
                            Price = 39.990000000000002,
                            Stock = 250.0,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(6000)
                        });
                });

            modelBuilder.Entity("Domain.ProductsCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("Role")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("13c450ed-ca54-4508-af13-d7f5e4ee912b"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 746, DateTimeKind.Utc).AddTicks(3020),
                            Email = "example1@mail.com",
                            Name = "Berke Öztürk",
                            Password = "pgTuHaTuJ4uRrd1waSbt8A==.XGZ3aqAyrnSJzLNqA5nqfmdqGfb0m2l9FMzA4zIJnSY=",
                            Role = false,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 746, DateTimeKind.Utc).AddTicks(3020)
                        },
                        new
                        {
                            Id = new Guid("5fdc8ffc-ab6d-4841-b7bb-66a33dcb28ad"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 752, DateTimeKind.Utc).AddTicks(7560),
                            Email = "example2@mail.com",
                            Name = "Doğa Su Türkileri",
                            Password = "BMrPPlghABqhCxSuh4/Irw==.7rCX9DslOTrYmuEg/+BUE90DWew69fdC+NdwnCbA0Rc=",
                            Role = false,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 752, DateTimeKind.Utc).AddTicks(7560)
                        },
                        new
                        {
                            Id = new Guid("4b83e3e9-aba0-480d-a316-b23206ef415c"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 759, DateTimeKind.Utc).AddTicks(2220),
                            Email = "example3@mail.com",
                            Name = "Ervin Parlak",
                            Password = "fDWekEQWkIeGafaG6LGgyA==.9GUaGQ9YPYNVxem2VP3I2zmLpSpeuujKKP/UgXE6qQY=",
                            Role = false,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 759, DateTimeKind.Utc).AddTicks(2220)
                        },
                        new
                        {
                            Id = new Guid("eeb800f2-14f6-4b66-a123-c0c8cd5986f6"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 765, DateTimeKind.Utc).AddTicks(6620),
                            Email = "example4@mail.com",
                            Name = "Gamze Naz Yıldırım",
                            Password = "YMagb87AxVpC9RuiXtBTJw==.occqNeTp9zOI6Z08d+Drkzybt7hE8I1HgyZ+Ml9ipJ4=",
                            Role = false,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 765, DateTimeKind.Utc).AddTicks(6620)
                        },
                        new
                        {
                            Id = new Guid("214bea2d-3b3a-43b3-a9b5-e5fe87aa7591"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 773, DateTimeKind.Utc).AddTicks(8110),
                            Email = "example5@mail.com",
                            Name = "Atakan Yıldırım",
                            Password = "tVEz1rpgCbHDpuR3u4w+XQ==.bDxbpv43U+goP8lYYPXdynkdAP0G69sovWKhexjK5ko=",
                            Role = false,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 773, DateTimeKind.Utc).AddTicks(8110)
                        },
                        new
                        {
                            Id = new Guid("513b1b98-7ff9-4932-b407-d5087e282511"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 780, DateTimeKind.Utc).AddTicks(2940),
                            Email = "example6@mail.com",
                            Name = "Ahmet Mümtaz Taylan",
                            Password = "6h7HWLYaGGmmmexMeqn0lQ==.OSrq3XZRXMhsZtun7WdsnVWDDCtIvwseav0KEeJBWsw=",
                            Role = false,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 780, DateTimeKind.Utc).AddTicks(2940)
                        },
                        new
                        {
                            Id = new Guid("30c245f8-65fe-4c1f-a780-796b8a543431"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 786, DateTimeKind.Utc).AddTicks(7510),
                            Email = "example7@mail.com",
                            Name = "Cem Yılmaz",
                            Password = "pHEq94/F6FmNB/A55zkP2g==.SYjiB8iOCd25Ddkp5QC/SUXJaG3GirVVwKF1lxAn6sw=",
                            Role = false,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 786, DateTimeKind.Utc).AddTicks(7510)
                        },
                        new
                        {
                            Id = new Guid("62fe1503-a665-4f19-9e9a-27d212478f07"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 793, DateTimeKind.Utc).AddTicks(2000),
                            Email = "example8@mail.com",
                            Name = "Şahan Gökbakar",
                            Password = "zl+PpeKKO7mv0HKQitMkrg==.8exF8uhTxFEBKOiz02Z3tQ+yDB1062rUi52178JjZQA=",
                            Role = false,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 793, DateTimeKind.Utc).AddTicks(2000)
                        },
                        new
                        {
                            Id = new Guid("d09ad47f-12f5-459c-a965-f84c55d2243c"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 799, DateTimeKind.Utc).AddTicks(6640),
                            Email = "example9@mail.com",
                            Name = "Mahsun Kırmızıgül",
                            Password = "8I5W8GZDsopQkVhrhxYSvA==.dqLxUSdIVsQEdd+wfdTVAxdIxyHGzDV8YSwktlL/MDA=",
                            Role = false,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 799, DateTimeKind.Utc).AddTicks(6640)
                        },
                        new
                        {
                            Id = new Guid("8f45ad14-1168-490c-87be-d753a5dae7ed"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 806, DateTimeKind.Utc).AddTicks(1190),
                            Email = "example10@mail.com",
                            Name = "Erkin Karaçay",
                            Password = "NivzNjWWEawzEaSeePT/1g==.tYc66j437N0Hr52mNVdcOOoql1K6htV3bCKlmgYvzpo=",
                            Role = false,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 806, DateTimeKind.Utc).AddTicks(1190)
                        },
                        new
                        {
                            Id = new Guid("213e6b7d-d56b-4733-b252-6b0de05c8e81"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 812, DateTimeKind.Utc).AddTicks(5560),
                            Email = "example11@mail.com",
                            Name = "Ozan İmamhatipoğlu",
                            Password = "GWU4dXdo2JBloCfPF6LmHg==.nWhIrZWb2ggnTrRvwIiMkqQwCyyYzWEuo9eL12yGl9M=",
                            Role = false,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 812, DateTimeKind.Utc).AddTicks(5560)
                        },
                        new
                        {
                            Id = new Guid("e98f715f-996f-4665-a313-d25a4745283c"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 819, DateTimeKind.Utc).AddTicks(6070),
                            Email = "example12@mail.com",
                            Name = "Barkın Özkaplan",
                            Password = "d8XGWjLVDJAyIAHRbemtsg==.s9KpkfpInp3EV7B8Pbw0JSml/PH/1jOu/3wxuCDDeTM=",
                            Role = false,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 819, DateTimeKind.Utc).AddTicks(6070)
                        },
                        new
                        {
                            Id = new Guid("45274ff9-98bf-444e-b741-5b42f5bb261b"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 826, DateTimeKind.Utc).AddTicks(350),
                            Email = "example13@mail.com",
                            Name = "Barış Onur Aydın",
                            Password = "y0wrjhPl465JWO7V7v3UBQ==.cEA+I0OhM9ntkgR7LVhh6qTkinbDDUOx4EKiTA1kRUw=",
                            Role = false,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 826, DateTimeKind.Utc).AddTicks(350)
                        },
                        new
                        {
                            Id = new Guid("23ed5f61-d970-4dd5-adf9-82022549925f"),
                            CreatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5540),
                            Email = "example14@mail.com",
                            Name = "Deniz Zarshat",
                            Password = "nuHWFLNx5dX7wJYCT7VdHQ==.QyF8NeNlj4zQaqpBeTPO8TyCRSvm/hTEVGmgcSGawfI=",
                            Role = false,
                            UpdatedDate = new DateTime(2024, 8, 26, 8, 17, 40, 832, DateTimeKind.Utc).AddTicks(5540)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
